name: Deploy lambdas to PROD

on:
  push:
    branches:
      - prod

jobs:
#  deploy-cti:
#    name: Deploy to CTI
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Setup node
#      uses: actions/setup-node@v1
#      with:
#        node-version: '12.13.1'
#
#    - name: Install app dependencies
#      run: npm install
#
#    - name: Package lambdas
#      run: |
#        npm run artifact:create
#      env:
#        ORG: managed
#        BUILD: 0.0.1
#
#    - name: Deploy authorizer
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-authorizer
#        zip_file: lambdas.zip
#
#    - name: Update authorizer alias
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.CTI_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.CTI_PROD_SECRET }}
#        AWS_REGION: eu-west-1
#      run: ./scripts/update-lambda-alias.sh "prod-cti-authorizer" "-live"
#
#    - name: Deploy cleanup
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-cleanup
#        zip_file: lambdas.zip
#
#    - name: Deploy download
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-download
#        zip_file: lambdas.zip
#
#    - name: Deploy exposures
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-exposures
#        zip_file: lambdas.zip
#
#    - name: Deploy settings
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-settings
#        zip_file: lambdas.zip
#
#    - name: Deploy upload
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-upload
#        zip_file: lambdas.zip
#
#    - name: Deploy token
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.CTI_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.CTI_PROD_SECRET }}
#        aws_region: eu-west-1
#        function_name: prod-cti-token
#        zip_file: lambdas.zip
#
#    - name: Create deployment annotation in dashboard
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.CTI_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.CTI_PROD_SECRET }}
#        AWS_REGION: eu-west-1
#      run: |
#        npm i --g aws-cloudwatch-annotations
#        aws-cw-annotate prod-cti --title 'Deployment lambda.${{ github.sha }}'
#
  deploy-ni:
    name: Deploy to NI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Install app dependencies
      run: npm install

    - name: Package lambdas
      run: |
        npm run artifact:create
      env:
        ORG: managed
        BUILD: 0.0.1

    - name: Deploy authorizer
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-authorizer
        zip_file: lambdas.zip

    - name: Update authorizer alias
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.NI_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.NI_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: ./scripts/update-lambda-alias.sh "prod-ni-authorizer" "-live"

    - name: Deploy cleanup
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-cleanup
        zip_file: lambdas.zip

    - name: Deploy download
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-download
        zip_file: lambdas.zip

    - name: Deploy exposures
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-exposures
        zip_file: lambdas.zip

    - name: Deploy settings
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-settings
        zip_file: lambdas.zip

    - name: Deploy token
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-token
        zip_file: lambdas.zip

    - name: Deploy upload
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.NI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.NI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-ni-upload
        zip_file: lambdas.zip

    - name: Create deployment annotation in dashboard
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.NI_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.NI_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: |
        npm i --g aws-cloudwatch-annotations
        aws-cw-annotate prod-ni --title 'Deployment lambda.${{ github.sha }}'

  deploy-gi:
    name: Deploy to GI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Install app dependencies
      run: npm install

    - name: Package lambdas
      run: |
        npm run artifact:create
      env:
        ORG: managed
        BUILD: 0.0.1

    - name: Deploy authorizer
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-authorizer
        zip_file: lambdas.zip

    - name: Update authorizer alias
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.GI_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.GI_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: ./scripts/update-lambda-alias.sh "prod-gct-authorizer" "-live"

    - name: Deploy cleanup
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-cleanup
        zip_file: lambdas.zip

    - name: Deploy download
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-download
        zip_file: lambdas.zip

    - name: Deploy exposures
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-exposures
        zip_file: lambdas.zip

    - name: Deploy settings
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-settings
        zip_file: lambdas.zip

    - name: Deploy token
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-token
        zip_file: lambdas.zip

    - name: Deploy upload
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.GI_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.GI_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-gct-upload
        zip_file: lambdas.zip

    - name: Create deployment annotation in dashboard
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.GI_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.GI_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: |
        npm i --g aws-cloudwatch-annotations
        aws-cw-annotate prod-gct --title 'Deployment lambda.${{ github.sha }}'
#
#  deploy-penn:
#    name: Deploy to PA
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Setup node
#      uses: actions/setup-node@v1
#      with:
#        node-version: '12.13.1'
#
#    - name: Install app dependencies
#      run: npm install
#
#    - name: Package lambdas
#      run: |
#        npm run artifact:create
#      env:
#        ORG: managed
#        BUILD: 0.0.1
#
#    - name: Deploy authorizer
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.PA_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.PA_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-penn-authorizer
#        zip_file: lambdas.zip
#
#    - name: Update authorizer alias
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.PA_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.PA_PROD_SECRET }}
#        AWS_REGION: us-east-1
#      run: ./scripts/update-lambda-alias.sh "prod-penn-authorizer" "-live"
#
#    - name: Deploy cleanup
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.PA_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.PA_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-penn-cleanup
#        zip_file: lambdas.zip
#
#    - name: Deploy exposures
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.PA_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.PA_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-penn-exposures
#        zip_file: lambdas.zip
#
#    - name: Deploy settings
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.PA_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.PA_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-penn-settings
#        zip_file: lambdas.zip
#
#    - name: Deploy token
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.PA_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.PA_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-penn-token
#        zip_file: lambdas.zip
#
#    - name: Create deployment annotation in dashboard
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.PA_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.PA_PROD_SECRET }}
#        AWS_REGION: us-east-1
#      run: |
#        npm i --g aws-cloudwatch-annotations
#        aws-cw-annotate prod-penn --title 'Deployment lambda.${{ github.sha }}'

  deploy-scot:
    name: Deploy to SCOT
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Install app dependencies
      run: npm install

    - name: Package lambdas
      run: |
        npm run artifact:create
      env:
        ORG: managed
        BUILD: 0.0.1

    - name: Deploy authorizer
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-authorizer
        zip_file: lambdas.zip

    - name: Update authorizer alias
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.SCOT_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SCOT_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: ./scripts/update-lambda-alias.sh "prod-scot-authorizer" "-live"

    - name: Deploy cleanup
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-cleanup
        zip_file: lambdas.zip

    - name: Deploy download
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-download
        zip_file: lambdas.zip

    - name: Deploy exposures
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-exposures
        zip_file: lambdas.zip

    - name: Deploy settings
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-settings
        zip_file: lambdas.zip

    - name: Deploy token
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-token
        zip_file: lambdas.zip

    - name: Deploy upload
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.SCOT_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.SCOT_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-scot-upload
        zip_file: lambdas.zip

    - name: Create deployment annotation in dashboard
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.SCOT_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SCOT_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: |
        npm i --g aws-cloudwatch-annotations
        aws-cw-annotate prod-scot --title 'Deployment lambda.${{ github.sha }}'

  deploy-jers:
    name: Deploy to JERS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Install app dependencies
      run: npm install

    - name: Package lambdas
      run: |
        npm run artifact:create
      env:
        ORG: managed
        BUILD: 0.0.1

    - name: Deploy authorizer
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-authorizer
        zip_file: lambdas.zip

    - name: Update authorizer alias
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.JERS_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.JERS_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: ./scripts/update-lambda-alias.sh "prod-jers-authorizer" "-live"

    - name: Deploy cleanup
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-cleanup
        zip_file: lambdas.zip

    - name: Deploy download
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-download
        zip_file: lambdas.zip

    - name: Deploy exposures
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-exposures
        zip_file: lambdas.zip

    - name: Deploy settings
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-settings
        zip_file: lambdas.zip

    - name: Deploy token
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-token
        zip_file: lambdas.zip

    - name: Deploy upload
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.JERS_PROD_KEY }}
        aws_secret_access_key: ${{ secrets.JERS_PROD_SECRET }}
        aws_region: eu-west-2
        function_name: prod-jers-upload
        zip_file: lambdas.zip

    - name: Create deployment annotation in dashboard
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.JERS_PROD_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.JERS_PROD_SECRET }}
        AWS_REGION: eu-west-2
      run: |
        npm i --g aws-cloudwatch-annotations
        aws-cw-annotate prod-jers --title 'Deployment lambda.${{ github.sha }}'
#
#  deploy-dela:
#    name: Deploy to DE
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Setup node
#      uses: actions/setup-node@v1
#      with:
#        node-version: '12.13.1'
#
#    - name: Install app dependencies
#      run: npm install
#
#    - name: Package lambdas
#      run: |
#        npm run artifact:create
#      env:
#        ORG: managed
#        BUILD: 0.0.1
#
#    - name: Deploy authorizer
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.DE_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.DE_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-dela-authorizer
#        zip_file: lambdas.zip
#
#    - name: Update authorizer alias
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.DE_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.DE_PROD_SECRET }}
#        AWS_REGION: us-east-1
#      run: ./scripts/update-lambda-alias.sh "prod-dela-authorizer" "-live"
#
#    - name: Deploy cleanup
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.DE_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.DE_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-dela-cleanup
#        zip_file: lambdas.zip
#
#    - name: Deploy exposures
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.DE_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.DE_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-dela-exposures
#        zip_file: lambdas.zip
#
#    - name: Deploy settings
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.DE_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.DE_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-dela-settings
#        zip_file: lambdas.zip
#
#    - name: Deploy token
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.DE_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.DE_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-dela-token
#        zip_file: lambdas.zip
#
#    - name: Create deployment annotation in dashboard
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.DE_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.DE_PROD_SECRET }}
#        AWS_REGION: us-east-1
#      run: |
#        npm i --g aws-cloudwatch-annotations
#        aws-cw-annotate prod-dela --title 'Deployment lambda.${{ github.sha }}'
#
#  deploy-newjers:
#    name: Deploy to NJ
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Setup node
#      uses: actions/setup-node@v1
#      with:
#        node-version: '12.13.1'
#
#    - name: Install app dependencies
#      run: npm install
#
#    - name: Package lambdas
#      run: |
#        npm run artifact:create
#      env:
#        ORG: managed
#        BUILD: 0.0.1
#
#    - name: Deploy authorizer
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.NJ_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.NJ_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-newjers-authorizer
#        zip_file: lambdas.zip
#
#    - name: Update authorizer alias
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.NJ_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.NJ_PROD_SECRET }}
#        AWS_REGION: us-east-1
#      run: ./scripts/update-lambda-alias.sh "prod-newjers-authorizer" "-live"
#
#    - name: Deploy cleanup
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.NJ_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.NJ_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-newjers-cleanup
#        zip_file: lambdas.zip
#
#    - name: Deploy exposures
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.NJ_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.NJ_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-newjers-exposures
#        zip_file: lambdas.zip
#
#    - name: Deploy settings
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.NJ_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.NJ_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-newjers-settings
#        zip_file: lambdas.zip
#
#    - name: Deploy token
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key_id: ${{ secrets.NJ_PROD_KEY }}
#        aws_secret_access_key: ${{ secrets.NJ_PROD_SECRET }}
#        aws_region: us-east-1
#        function_name: prod-newjers-token
#        zip_file: lambdas.zip
#
#    - name: Create deployment annotation in dashboard
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.NJ_PROD_KEY }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.NJ_PROD_SECRET }}
#        AWS_REGION: us-east-1
#      run: |
#        npm i --g aws-cloudwatch-annotations
#        aws-cw-annotate prod-newjers --title 'Deployment lambda.${{ github.sha }}'
